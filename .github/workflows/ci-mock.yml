name: CI/CD Pipeline (MOCK for Security Scan Testing)

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE_NAME: klask-frontend
  BACKEND_IMAGE_NAME: klask-backend

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Mock Frontend Tests
      run: |
        echo "üé≠ MOCK: Frontend tests running..."
        echo "‚úÖ Frontend tests passed (mocked)"

  test-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Mock Backend Tests
      run: |
        echo "üé≠ MOCK: Backend tests running..."
        echo "‚úÖ Backend tests passed (mocked)"

  build-and-push:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Mock Extract metadata (frontend)
      id: meta-frontend
      run: |
        echo "üé≠ MOCK: Extracting frontend metadata..."
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          TAG="pr-${{ github.event.number }}"
        elif [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" ]]; then
          TAG="latest"
        elif [[ "${{ github.ref_type }}" == "tag" ]]; then
          TAG="${{ github.ref_name }}"
        else
          TAG="${{ github.ref_name }}"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "‚úÖ Frontend tag: $TAG"

    - name: Mock Extract metadata (backend)
      id: meta-backend
      run: |
        echo "üé≠ MOCK: Extracting backend metadata..."
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          TAG="pr-${{ github.event.number }}"
        elif [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" ]]; then
          TAG="latest"
        elif [[ "${{ github.ref_type }}" == "tag" ]]; then
          TAG="${{ github.ref_name }}"
        else
          TAG="${{ github.ref_name }}"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "‚úÖ Backend tag: $TAG"
    
    - name: Mock Build and push frontend
      run: |
        echo "üé≠ MOCK: Building frontend image..."
        echo "üì¶ Would build: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.meta-frontend.outputs.tag }}"
        sleep 3
        echo "‚úÖ Frontend image built and pushed (mocked)"

    - name: Mock Build and push backend
      run: |
        echo "üé≠ MOCK: Building backend image..."
        echo "üì¶ Would build: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.meta-backend.outputs.tag }}"
        sleep 3
        echo "‚úÖ Backend image built and pushed (mocked)"

  security-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Determine image tag for security scan
      id: tag
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "tag=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref_type }}" == "tag" ]]; then
          echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        else
          BRANCH_NAME="${{ github.ref_name }}"
          CLEAN_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g')
          echo "tag=$CLEAN_BRANCH_NAME" >> $GITHUB_OUTPUT
        fi
        echo "üè∑Ô∏è Security scan will use tag: $(cat $GITHUB_OUTPUT | grep tag= | cut -d'=' -f2)"

    - name: Run Trivy vulnerability scanner (frontend)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
        format: 'sarif'
        output: 'trivy-frontend.sarif'
    
    - name: Run Trivy vulnerability scanner (backend)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
        format: 'sarif'
        output: 'trivy-backend.sarif'
    
    - name: Upload Trivy scan results (frontend)
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-frontend.sarif'
        category: 'trivy-frontend'
      
    - name: Upload Trivy scan results (backend)  
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-backend.sarif'
        category: 'trivy-backend'