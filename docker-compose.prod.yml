version: '3.8'

services:
  klask-backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/klask-backend:latest
    container_name: klask-backend
    restart: unless-stopped
    environment:
      - RUST_LOG=info
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3000
      - HOST=0.0.0.0
    ports:
      - "3000:3000"
    networks:
      - klask-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  klask-frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/klask-frontend:latest
    container_name: klask-frontend
    restart: unless-stopped
    ports:
      - "80:8080"
    depends_on:
      - klask-backend
    networks:
      - klask-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:18-alpine
    container_name: klask-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-klask}
      - POSTGRES_USER=${POSTGRES_USER:-klask}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./klask-rs/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - klask-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-klask}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: klask-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - klask-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  klask-network:
    driver: bridge
